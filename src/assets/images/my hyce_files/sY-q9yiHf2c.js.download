if (self.CavalryLogger) { CavalryLogger.start_js(["x1KNUxC"]); }

__d("useHandleUpdateMultiNotifReadState",["CometNotificationsMutationLogger","CometNotificationsUpdateSeenStateMutation","recoverableViolation","useGetCancellableSeenStateCallback","useTriggerAccessibilityAlert"],(function(a,b,c,d,e,f,g){"use strict";var h="MAIN_SURFACE";function i(a){var b=a.accessibilityString,e=a.environment,f=a.receivedNotificationIdsRef,g=a.timestamp,i=a.triggerAccessibilityAlert;if(f==null||f.current==null)return;d("CometNotificationsUpdateSeenStateMutation").CometNotificationsUpdateSeenStateMutation(e,{environment:h,input:{environment:h,is_comet:!0,last_notif_sync_time:g,notif_ids:Array.from(f.current),source:"unknown",update_type:"MARK_ALL_READ"}},{mutationLogger:d("CometNotificationsMutationLogger").notificationMarkAllAsReadStart,onError:function(a){c("recoverableViolation")("Update read state (multi) mutation failed with an error: ","Notifications",{error:a})},onSuccess:function(){b!=null&&i!=null&&i(b)},updater:function(a){d("CometNotificationsUpdateSeenStateMutation").updateMultiNotifReadState(a),d("CometNotificationsUpdateSeenStateMutation").clearBadgeCount(a)}})}function a(a){var b=c("useTriggerAccessibilityAlert")();return c("useGetCancellableSeenStateCallback")(babelHelpers["extends"]({},a,{triggerAccessibilityAlert:b,updater:i}))}g["default"]=a}),98);
__d("useHandleUpdateMultiNotifSeenState",["CometNotificationsMutationLogger","CometNotificationsUpdateSeenStateMutation","recoverableViolation","useGetCancellableSeenStateCallback"],(function(a,b,c,d,e,f,g){"use strict";var h="MAIN_SURFACE";function i(a){var b=a.environment,e=a.receivedNotificationIdsRef;a=a.timestamp;if(e==null||e.current==null)return;d("CometNotificationsUpdateSeenStateMutation").CometNotificationsUpdateSeenStateMutation(b,{environment:h,input:{environment:h,is_comet:!0,last_notif_sync_time:a,notif_ids:Array.from(e.current),source:"unknown",update_type:"MARK_ALL_SEEN"}},{mutationLogger:d("CometNotificationsMutationLogger").notificationMarkAllAsSeenStart,onError:function(a){c("recoverableViolation")("Update seen state (multi) mutation failed with an error: ","Notifications",{error:a})},updater:function(a){d("CometNotificationsUpdateSeenStateMutation").updateMultiNotifSeenState(a),d("CometNotificationsUpdateSeenStateMutation").clearBadgeCount(a)}})}function a(a){return c("useGetCancellableSeenStateCallback")(babelHelpers["extends"]({},a,{updater:i}))}g["default"]=a}),98);